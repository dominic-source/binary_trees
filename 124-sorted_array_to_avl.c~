#include "binary_trees.h"

/**
 * sorted_array_to_avl - create an avl tree from a sorted array
 * @array: a pointer to the array
 * @size: the size of the array
 * Return: NULL or pointer to the root of the tree
 */
avl_t *sorted_array_to_avl(int *array, size_t size)
{
	avl_t *node, *next = NULL, *current = NULL, *hold = NULL;
	size_t i;

	if (array == NULL || size == 0)
		return (NULL);
	current = (avl_t *)binary_tree_node(NULL, array[(size / 2) - 1]);
	if (current == NULL)
		return (NULL);

	for (i = 0; i < size; i++)
	{
		next = current;
		node = (avl_t *)binary_tree_node(NULL, array[i]);
		if (node == NULL)
			return (NULL);
		while (next != NULL)
		{
		printf("%li\n", i);
			hold = next;
			if (next->n < node->n)
				next = next->left;
			else if (next->n > node->n)
				next = next->right;
			else
				break;
		}
		node->parent = hold;
		if (node->n < hold->n)
			hold->left = node;
		else
			hold->right = node;
	}
	return (current);
}
